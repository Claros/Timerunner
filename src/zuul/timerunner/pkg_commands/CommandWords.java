package zuul.timerunner.pkg_commands;import java.util.HashMap;/** * This class holds an enumeration of all command words known to the game. * It is used to recognise commands as they are typed in. * * @author  Michael Kolling and David J. Barnes * @author  ASTIER Naji & ROBIN Yohann * @version 25/03/2013 */public class CommandWords{    // A mapping between a command word and the CommandWord    // associated with it.    private HashMap<String, CommandWord> aValidCommands;        /**     * Constructor - initialise the command words.     */    public CommandWords()    {        this.aValidCommands = new HashMap<String, CommandWord>();                for(CommandWord vCommand : CommandWord.values())         {            if(vCommand != CommandWord.UNKNOWN)             {                this.aValidCommands.put(vCommand.toString(), vCommand);            }        }            }        /**     * Find the CommandWord associated with a command word.     * @param pCommandWord The word to look up.     * @return The CommandWord correspondng to commandWord, or UNKNOWN     *         if it is not a valid command word.     */    public CommandWord getCommandWord(String pCommandWord)    {        CommandWord vCommand = this.aValidCommands.get(pCommandWord);        if(vCommand != null)         {            return vCommand;        }        else         {            return CommandWord.UNKNOWN;        }    }        /**     * Gets the command.     *     * @param pCommandWord the command word     * @return the command     */    public Command getCommand (final String pCommandWord)    {        return this.getCommandWord(pCommandWord).getCommand();    }        /**     * Check whether a given String is a valid command word.      * @param pString The command to check     * @return true if it is, false if it isn't.     */    public boolean isCommand(String pString)    {        return this.aValidCommands.containsKey(pString);    }        /**     * @return All valid commands.     */    public String showAll()     {        String vCommands = new String ();        for(String vC : this.aValidCommands.keySet())         {            vCommands = vCommands + vC + ", ";        }        return vCommands;    }}